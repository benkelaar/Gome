<!-- ================================================================================= -->
<!-- This build file automatically generated by EclipseME                              -->
<!-- Version 1.6.5 on Sat Feb 24 10:50:09 SAST 2007.                                    -->
<!--                                                                                   -->
<!-- Modifications may be made to this file and to the user-build.properties files.    -->
<!-- Do not alter eclipseme-build.xml or eclipseme-build.properties.                   -->
<!-- ================================================================================= -->

<project name="gome" default="all" basedir=".">

	<taskdef resource="net/sf/antcontrib/antlib.xml" />
	<taskdef resource="antenna.properties" classpath="${path.antenna.jar}" />
	<property file="user-build.properties" />
	<import file="eclipseme-custom.xml" />
	<target name="deployedSuite" depends="deployable" />

	<!--var name="LOCALE" value="en_US" /-->

	<fileset id="base" dir="${project.root.gome}/sources">
		<include name="com/indigonauts/gome/i18n/help/*.*" />
		<include name="index.txt" />
		<include name="gomoicon.png" />
	</fileset>

	<target name="MIDP2">
		<var name="wtk.midpapi" value="${wtk.home}/lib/midpapi20.jar:${wtk.home}/lib/cldcapi11.jar:${wtk.home}/lib/wma20.jar:${wtk.home}/lib/mmapi.jar:${wtk.home}/lib/j2me-ws.jar:${wtk.home}/lib/jsr75.jar:${wtk.home}/lib/jsr082.jar:${wtk.home}/lib/jsr184.jar" />
		<var name="wtk.cldc.version" value="1.1" />
		<var name="wtk.midp.version" value="2.0" />
	</target>

	<target name="all" depends="cleandist">
		<var name="LOCALE" value="fr_FR" />
		<antcall target="fullVersion" />
		<var name="LOCALE" value="en_US" />
		<antcall target="fullVersion" />
	</target>
	
	<target name="fullVersion" depends="MIDP2" description="Full version">
		<echo message="Full Version" />
		<var name="symbols" value="IGS,MENU_IMAGES,JSR75,BT,AA,JOSEKI,PROBLEMS,GAMES" />
		<antcall target="dynamic"/>
	</target>

	<!-- Initialize the build environment as necessary -->
	<target name="-initialize">
		<echo message="Initializing build environment..." />

		<!-- Create the build directories -->
		<mkdir dir="${path.build}" />
		<mkdir dir="${path.build.classes}" />
		<mkdir dir="${path.build.classes}/_no_export" />
		<mkdir dir="${path.build.output}" />
	</target>

	<target name="preprocess" depends="clean, -eclipseme-initialize, -initialize">
		<wtkpreprocess device="Generic/Java" version="2" encoding="utf8" srcdir="${project.root.gome}/sources" destdir="${project.root.gome}/src" symbols="${symbols},LOCALE=&quot;${LOCALE}&quot;,VERSION=&quot;${gome.jarVersion}&quot;" />
		<copy todir="${project.root.gome}/src">
			<fileset refid="base" />
			<fileset refid="custom-files" />
		</copy>
	</target>

	<!-- Build the classes that make up the midlet -->
	<target name="build" depends="-initialize, preprocess, -eclipseme-build" description="Builds the classes that make up the project">
	</target>

	<!-- Package up the compiled code without obfuscation -->
	<target name="jar" depends="build,-eclipseme-jar" description="Packages the midlet jar without obfuscation">
	</target>

	<!-- Package up the compiled code with obfuscation -->
	<target name="deployable" depends="build,-eclipseme-deployable" description="Packages the midlet jar, with obfuscation">
		<move file="${project.root.gome}/deployed/${midlet.name}.jad" tofile="${project.root.gome}/dist/${midlet.name}-${LOCALE}-${gome.version}.jad" />
		<move file="${project.root.gome}/deployed/${midlet.name}.jar" tofile="${project.root.gome}/dist/${midlet.name}-${LOCALE}-${gome.version}.jar" />
	</target>

	<!-- Run the packaged code -->
	<target name="run" depends="deployable,-eclipseme-run" description="Runs the deployed package in the emulator">
	</target>

	<target name="cleandist" depends="-eclipseme-initialize">
		<delete dir="${project.root.gome}/dist" />
		<mkdir dir="${project.root.gome}/dist" />
	</target>

	<!-- Clean the output of a previous execution -->
	<target name="clean" depends="-eclipseme-initialize">
		<delete dir="${project.root.gome}/src" />
		<delete dir="${path.build.classes}" />
		<mkdir dir="${project.root.gome}/src" />
		<mkdir dir="${path.build.classes}" />
	</target>

	<scriptdef name="split" language="javascript">
		<attribute name="value" />
		<attribute name="sep" />
		<![CDATA[
	             values = attributes.get("value").split(attributes.get("sep"));
	             for(i=0; i<values.length; i++) {
	                 project.setNewProperty(values[i],"true");
	             }
	         ]]>
	</scriptdef>

	<scriptdef name="defineMidletNameAndPermissions" language="javascript">
		<![CDATA[
		             name = "";
					 permissions = "";
					 if(project.getProperty("IGS")) {
						name+="I";
						permissions+="javax.microedition.io.Connector.socket,"; 
					 }
					 if(project.getProperty("MENU_IMAGES"))
						name+="M";
		 			 if(project.getProperty("JSR75")) {
						name+="J";
						permissions+="javax.microedition.io.Connector.file.read,";
						permissions+="javax.microedition.io.Connector.file.write,";
					 }
		             if(project.getProperty("BT"))
						permissions+="javax.microedition.io.Connector.bluetooth.client,";
						permissions+="javax.microedition.io.Connector.bluetooth.server,";
			            name+="B";
		             if(project.getProperty("AA"))
			            name+="A";
		             if(project.getProperty("JOSEKI"))
			            name+="j";
		             if(project.getProperty("PROBLEMS"))
			            name+="P";
		             if(project.getProperty("GAMES"))
			            name+="G";
		             if(project.getProperty("DEBUG"))
			            name+="D";
				     if(name != "") 
		                name = "Gome-" + name;
		                   else
		                name = "Gome";
					 if(permissions != "")
						permissions = "MIDlet-Permissions: " + permissions.slice(0, -1);
		             project.setProperty("midlet.name",name);
					 project.setProperty("midlet.permissions",permissions);
		         ]]>
	</scriptdef>



	<!-- adapt to the symbols given from the command line -->
	<target name="dynamic" depends="MIDP2">
		<echo message="Build a dynamic version of gome with ${symbols} locale = ${LOCALE}" />
		<split value="${symbols}" sep="," />
		<defineMidletNameAndPermissions />
		<echo message="${midlet.name}" />
		<echo message="${midlet.permissions}" />
		<uptodate property="buildNotRequired" targetfile="/tmp/gome/${midlet.name}-${LOCALE}-${gome.version}.jar">
			<srcfiles dir="${project.root.gome}" includes="**/*.java" />
			<srcfiles dir="${project.root.gome}" includes="**/*.xml" />
			<srcfiles dir="${project.root.gome}" includes="**/*.png" />
		</uptodate>
		<if>
			<istrue value="${buildNotRequired}"/>
			<then>
				<echo message="The compilation cache is uptodate" />
			</then>
			<else>
				<fileset id="custom-files" dir="${project.root.gome}/sources">
					<include name="dir.png" if="MENU_IMAGES" />
					<include name="game.png" if="MENU_IMAGES" />
					<include name="rdir.png" if="MENU_IMAGES" />
					<include name="rgame.png" if="MENU_IMAGES" />
					<include name="text.png" if="MENU_IMAGES" />
					<include name="gdark.png" if="MENU_IMAGES" />
					<include name="glight.png" if="MENU_IMAGES" />
					<include name="gmedium.png" if="MENU_IMAGES" />
					<include name="games/*.*" if="GAMES" />
					<include name="problems/*.*" if="PROBLEMS" />
					<include name="joseki/**/*.*" if="JOSEKI" />
					<include name="gfx/*.r" if="AA" />
				</fileset>

				<copy file="${project.root.gome}/gome-MIDP2.jad" tofile="${project.root.gome}/${midlet.name}.jad" />
				<replace file="${project.root.gome}/${midlet.name}.jad">
				    <replacefilter token="@JAR_URL" value="${midlet.name}-${LOCALE}-${gome.version}.jar" />
					<replacefilter token="@VERSION" value="${gome.jarVersion}" />
					<replacefilter token="@PERMISSIONS" value="${midlet.permissions}" />
				</replace>
				<antcall target="deployable" />
				<delete file="${project.root.gome}/${midlet.name}.jad" />
				<copy file="${project.root.gome}/dist/${midlet.name}-${LOCALE}-${gome.version}.jar" todir="/tmp/gome/" />
			</else>
		</if>
	</target>
</project>
